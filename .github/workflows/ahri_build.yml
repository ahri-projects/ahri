name: "publish"

on:
  push:
    branches:
      - release

# Esse workflow cria ou atualiza um release com os artefatos gerados a partir do subm√≥dulo "ahri-app".

jobs:
  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: "macos-latest" # Desktop para Arm (M1)
            args: "--target aarch64-apple-darwin"
          - platform: "macos-latest" # Desktop para Intel
            args: "--target x86_64-apple-darwin"
          - platform: "ubuntu-22.04" # Desktop para Linux
            args: ""
          - platform: "windows-latest" # Desktop para Windows
            args: ""
          # Build mobile para iOS (em runners macOS)
          - platform: "macos-latest"
            args: "--mobile"
          # Build mobile para Android (em runners Ubuntu, por exemplo)
          - platform: "ubuntu-22.04"
            args: "--mobile"

    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout repository and submodules
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.AHRI_BUILD }}
          submodules: recursive

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: Install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      - name: Install frontend dependencies
        working-directory: ahri-app
        run: yarn install

      - name: Build Tauri app
        uses: tauri-apps/tauri-action@mobile
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: app-v__VERSION__
          releaseName: "App v__VERSION__"
          releaseBody: "See the assets to download this version and install."
          releaseDraft: true
          prerelease: false
          mobile: true
          args: ${{ matrix.args }}
